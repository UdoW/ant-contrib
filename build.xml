<project name="ant-contrib" default="jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

    <property file="build.properties"/>

    <property name="root.dir" location="."/>
    <property name="src.main.dir" location="src/main/java"/>
    <property name="resources.main.dir" location="src/main/resources"/>
    <property name="src.test.dir" location="src/test/java"/>
    <property name="resources.test.dir" location="src/test/resources"/>
    <property name="docs.dir" location="src/site/resources"/>
    <property name="xdoc.dir" location="src/site/xdoc"/>
    <property name="target.dir" location="target"/>
    <property name="lib.dir" value="${target.dir}/lib"/>
    <property name="target.classes.dir" location="${target.dir}/classes"/>
    <property name="target.test-classes.dir" location="${target.dir}/test-classes"/>
    <property name="target.docs.dir" location="${target.dir}/docs"/>
    <property name="checkstyle.src.dir" location="src/config"/>
    <property name="checkstyle.report.dir" location="${target.dir}/docs/checkstyle"/>
    <property name="target.stage.dir" location="${target.dir}/stage"/>
    <property name="xml.log.dir" value="${target.dir}/test-report"/>
    <property name="dist.dir" location="dist"/>
    <property name="skip.tests" value="walls"/>

    <!-- Ivy -->
    <property name="central.repo" value="http://repo1.maven.org/maven2"/>
    <property name="ivy.version" value="2.4.0"/>
    <property name="ivy.dir" value="${user.home}/.ivy2/cache/org.apache.ivy/jars"/>
    <property name="ivy.jar.name" value="ivy-${ivy.version}.jar"/>
    <available property="has.ivy" file="${ivy.dir}/${ivy.jar.name}" type="file"/>

    <target name="get-ivy" description="o Get Ivy jar unless already cached" unless="has.ivy">
        <mkdir dir="${ivy.dir}"/>
        <get usetimestamp="true" src="https://repository.apache.org/content/repositories/releases/org/apache/ivy/ivy/${ivy.version}/${ivy.jar.name}"
             skipexisting="true"
             dest="${ivy.dir}/${ivy.jar.name}"/>
    </target>

    <target name="init" description="o Initialize Ivy" depends="get-ivy">
      <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.dir}/${ivy.jar.name}"/>
      <ivy:settings file="${basedir}/ivy.settings.xml"/>
    </target>

    <target name="get-deps" description="o Retrieve dependencies" depends="init" unless="noget">
      <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact]-[revision].[ext]" sync="true" type="jar"/>
    </target>

    <target name="classpath" depends="get-deps">
        <ivy:cachepath pathid="compile.classpath" type="jar" conf="compile"/>
        <ivy:cachepath pathid="runtime.classpath" type="jar" conf="runtime"/>
        <ivy:cachepath pathid="test.classpath" type="jar" conf="test"/>
        <ivy:cachepath pathid="doxia.classpath" type="jar" conf="doxia"/>
        <ivy:cachefileset setid="compile.fileset" type="jar" conf="compile"/>
        <ivy:cachefileset setid="runtime.fileset" type="jar" conf="runtime"/>
        <ivy:cachefileset setid="test.fileset" type="jar" conf="test"/>
    </target>

    <target name="compile" description="o Compile Java classes and copy antlib" depends="classpath">
        <mkdir dir="${target.classes.dir}"/>
        <javac srcdir="${src.main.dir}"
               destdir="${target.classes.dir}"
               debug="true"
               classpathref="compile.classpath"
               source="${jdk.source}"
               target="${jdk.target}"
               includeantruntime="false"/>

        <copy todir="${target.classes.dir}">
            <fileset dir="${resources.main.dir}"
                 includes="**/*.xml"/>
        </copy>
    </target>

    <target name="compile-tests" description="o Compile test Java classes and copy test resources" depends="compile">
        <mkdir dir="${target.test-classes.dir}"/>
        <javac srcdir="${src.test.dir}"
               destdir="${target.test-classes.dir}"
               debug="true"
               source="${jdk.source}"
               target="${jdk.target}"
               includeantruntime="true">
            <classpath>
                <path refid="test.classpath"/>
                <pathelement location="${target.classes.dir}"/>
            </classpath>
        </javac>

        <copy todir="${target.test-classes.dir}">
	    <!-- antclipse expects .classpath in basedir -->
            <fileset dir="${resources.test.dir}"
                     includes="**/*.java,**/*.properties,**/*.xml,**/*.txt,.classpath"/>
        </copy>
    </target>

    <target name="jar" description="o Build jar file" depends="compile-tests">
        <mkdir dir="${target.dir}"/>
        <property name="jar.file" value="${target.dir}/${ivy.module}.jar"/>
        <tstamp>
            <format property="tstamp" pattern="dd/MM/yyyy HH:mm:ss"/>
        </tstamp>
        <jar file="${jar.file}">
            <manifest>
                <attribute name="Version" value="${ivy.revision}"/>
                <attribute name="Build-Timestamp" value="${tstamp}"/>
            </manifest>
            <fileset dir="${target.classes.dir}"/>
        </jar>
    </target>

    <target name="test-internal" depends="jar">
        <mkdir dir="${xml.log.dir}"/>
        <loadresource property="exclude.tests">
            <propertyresource name="skip.tests"/>
            <filterchain>
                <tokenfilter>
                   <replacestring from="," to="/**,**/"/>
                </tokenfilter>
            </filterchain>
        </loadresource>
        <junit fork="true" tempdir="${target.dir}"
               haltonerror="false" haltonfailure="false"
               errorproperty="junit.error" failureproperty="junit.failure"
               showoutput="off" printsummary="on">
            <formatter type="xml"/>
            <sysproperty key="basedir" value="${target.test-classes.dir}"/>
            <sysproperty key="antcontrib.jar" file="${jar.file}"/>
            <batchtest todir="${xml.log.dir}">
                <fileset dir="${target.test-classes.dir}"
                         includes="net/sf/antcontrib/**/*Test.class"
                         excludes="**/${exclude.tests}/**"/>
            </batchtest>
            <classpath>
                <path refid="test.classpath"/>
                <pathelement location="${target.classes.dir}"/>
                <pathelement location="${target.test-classes.dir}"/>
            </classpath>
        </junit>
    </target>

    <target name="test" depends="test-internal" description="o Run JUnit tests">
        <fail message="JUnit error (${junit.error}) encountered. See logs (in ${xml.log.dir}) for details (use the target test-report to run the test with a report)" if="junit.error"/>
        <fail message="JUnit failure (${junit.failure}) encountered. See logs (in ${xml.log.dir}) for details (use the target test-report to run the test with a report)" if="junit.failure"/>
    </target>

    <target name="test-report" depends="test-internal" description="o Make report of JUnit tests">
        <junitreport todir="${xml.log.dir}">
            <fileset dir="${xml.log.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${target.docs.dir}/test-reports"/>
        </junitreport>
        <fail message="JUnit error (${junit.error}) encountered. See logs (in ${xml.log.dir}) or report (in ${target.docs.dir}/test-reports)" if="junit.error"/>
        <fail message="JUnit failure (${junit.failure}) encountered. See logs (in ${xml.log.dir}) or report (in ${target.docs.dir}/test-reports)" if="junit.failure"/>
    </target>

    <target name="init-checkstyle" depends="jar">
        <ivy:cachepath organisation="com.puppycrawl.tools" module="checkstyle" revision="7.8"
                inline="true" conf="default" pathid="checkstyle.classpath" log="download-only"/>
        <taskdef uri="antlib:com.puppycrawl.tools.checkstyle.ant"
                 resource="com/puppycrawl/tools/checkstyle/ant/antlib.xml" classpathref="checkstyle.classpath"/>
    </target>

    <!-- Checks ant-contrib codebase according to ${checkstyle.src.dir}/checkstyle.xml -->
    <target name="checkstyle-internal" depends="init-checkstyle">
        <mkdir dir="${checkstyle.report.dir}"/>
        <cs:checkstyle xmlns:cs="antlib:com.puppycrawl.tools.checkstyle.ant"
		       config="${checkstyle.src.dir}/checkstyle.xml"
		       failOnViolation="false" failureProperty="checkstyle.failed">
            <classpath>
                <path refid="runtime.classpath"/>
            </classpath>
            <formatter type="xml" toFile="${checkstyle.report.dir}/checkstyle.xml"/>
            <fileset dir="${src.main.dir}">
                <include name="**/*.java"/>
            </fileset>
        </cs:checkstyle>
    </target>

    <target name="checkstyle" depends="checkstyle-internal"
	    description="checks Ivy codebase according to ${checkstyle.src.dir}/checkstyle.xml">
        <fail if="checkstyle.failed"
            message="Checkstyle has errors. See report in ${checkstyle.report.dir}"/>
    </target>

    <target name="checkstyle-report" depends="checkstyle-internal">
        <property name="checkstyle.basedir" location="${src.main.dir}"/>
        <xslt in="${checkstyle.report.dir}/checkstyle.xml"
                style="${checkstyle.src.dir}/checkstyle-frames.xsl"
                out="${checkstyle.report.dir}/output.txt">
            <param name="basedir" expression="${checkstyle.basedir}"/>
            <param name="output.dir" expression="${checkstyle.report.dir}"/>
        </xslt>
    </target>

    <target name="javadoc" description="o Build javadoc" depends="classpath">
        <javadoc sourcepath="${src.main.dir}"
             destdir="${target.docs.dir}/api"
             packagenames="net.sf.antcontrib.*"
             author="true"
             version="true"
             windowtitle="Ant Contrib"
             classpathref="compile.classpath">
        <tag name="ant.task" enabled="false" description="Task:" scope="types"/>
        <tag name="ant.datatype" enabled="false"
             description="Data type:" scope="types"/>
        <tag name="ant.attribute" enabled="false"
             description="Attribute:" scope="types"/>
        <tag name="ant.attribute.group" enabled="false"
             description="Attribute group:" scope="types"/>
        <tag name="ant.element" enabled="false"
             description="Nested element:" scope="types"/>
        </javadoc>
    </target>

    <target name="site" description="o Build manual from xdoc files" depends="test-report,javadoc">
        <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${jar.file}" onerror="ignore"/>
        <for param="xdoc.source">
            <path>
                <fileset dir="${xdoc.dir}" includes="*.xml"/>
            </path>
            <sequential>
                <propertyregex property="xdoc.html" input="@{xdoc.source}"
                               regexp=".*[\\/]xdoc[\\/](.*)\.xml$" replace="\1.html" override="true"/>
                <echo>${xdoc.html}</echo>
                <java classname="org.apache.maven.doxia.cli.ConverterCli" classpathref="doxia.classpath">
                    <arg line="-from xdoc -to xhtml"/>
                    <arg value="-in"/>
                    <arg file="@{xdoc.source}"/>
                    <arg value="-out"/>
                    <arg file="${target.docs.dir}/manual/${xdoc.html}"/>
                </java>
            </sequential>
        </for>
        <copy todir="${target.docs.dir}/manual">
            <fileset dir="${docs.dir}" includes="**/*.html"/>
        </copy>
    </target>

    <target name="dist-stage" description="o Stage distribution" depends="site">
        <mkdir dir="${target.stage.dir}"/>
        <mkdir dir="${target.stage.dir}/lib"/>

        <copy file="${jar.file}"
              tofile="${target.stage.dir}/${ivy.module}-${ivy.revision}.jar"/>

        <copy todir="${target.stage.dir}">
            <fileset dir="${root.dir}" includes="README.txt"/>
            <fileset dir="${target.dir}" includes="docs/**/*"/>
        </copy>
        <copy todir="${target.stage.dir}/lib" flatten="true">
            <fileset refid="runtime.fileset"/>
        </copy>
    </target>

    <target name="zip" depends="dist-stage">
        <mkdir dir="${dist.dir}"/>
        <zip file="${dist.dir}/${ivy.module}-${ivy.revision}-bin.zip">
            <zipfileset prefix="ant-contrib" dir="${target.stage.dir}"
                        includes="**/*"/>
        </zip>

        <zip file="${dist.dir}/${ivy.module}-${ivy.revision}-src.zip">
            <zipfileset prefix="ant-contrib"
                        dir="${root.dir}"
                        includes="**/*"
                        excludes="target,target/**/*,dist,dist/**/*"/>
        </zip>
    </target>

    <target name="tar.gz" depends="dist-stage">
        <mkdir dir="${dist.dir}"/>

        <tar destfile="${dist.dir}/${ivy.module}-${ivy.revision}-bin.tar.gz"
             compression="gzip">
            <tarfileset prefix="ant-contrib"
                        dir="${target.stage.dir}"
                        includes="**/*"/>
        </tar>

        <tar destfile="${dist.dir}/${ivy.module}-${ivy.revision}-bin.tar.bz2"
             compression="bzip2">
            <tarfileset prefix="ant-contrib"
                        dir="${target.stage.dir}"
                        includes="**/*"/>
        </tar>

        <tar destfile="${dist.dir}/${ivy.module}-${ivy.revision}-src.tar.gz"
             compression="gzip">
            <tarfileset prefix="ant-contrib"
                        dir="${root.dir}"
                        includes="**/*"
                        excludes="target,target/**/*,dist,dist/**/*"/>
        </tar>

        <tar destfile="${dist.dir}/${ivy.module}-${ivy.revision}-src.tar.bz2"
             compression="bzip2">
            <tarfileset prefix="ant-contrib"
                        dir="${root.dir}"
                        includes="**/*"
                        excludes="target,target/**/*,dist,dist/**/*"/>
        </tar>
    </target>

    <target name="package" description="o Package and checksum the distribution" depends="tar.gz,zip">
        <checksum fileext=".md5">
            <fileset dir="${dist.dir}">
                <include name="*.zip"/>
                <include name="*.tar.bz2"/>
                <include name="*.tar.gz"/>
            </fileset>
        </checksum>
    </target>

    <target name="dist" depends="package"/>

    <target name="clean">
        <delete includeemptydirs="true">
            <fileset dir="${target.dir}" includes="**/*"/>
            <fileset dir="${dist.dir}" includes="**/*"/>
        </delete>
    </target>

</project>
