<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <title>SortList Tasks</title>
    <author email="mattinger@yahoo.com">Matthew Inger</author>
  </properties>
  <body>
    <section name="SortList">
    <p>
      Sort a delimited list of items in their natural string
      order. Note that the "value" and "refid" attributes are mutually
      exclusive, and the "value" attribute takes precedence if both
      are specified.
    </p>
    <subsection name="Parameters">
    <table summary="SortList Attributes" border="1" cellpadding="2" cellspacing="0">
      <tr>
        <th>Attribute</th>
        <th>Description</th>
        <th>Required</th>
      </tr>
      <tr>
        <td valign="top">property</td>
        <td valign="top">The name of the property to set.</td>
        <td align="center" valign="top">Yes.</td>
      </tr>
      <tr>
        <td valign="top">override</td>
        <td valign="top">
          If the property is already set, should we change it's
          value. Can be "true" or "false"
        </td>
        <td align="center" valign="top">No. Defaults to "false".</td>
      </tr>
      <tr>
        <td valign="top">value</td>
        <td valign="top">
          The list of values to process, with the delimiter character,
          indicated by the "delimiter" attribute, separating
          each value.
        </td>
        <td align="center" valign="top">
          Yes, unless "refid" is specified.
        </td>
      </tr>
      <tr>
        <td valign="top">refid</td>
        <td valign="top">
          The id of where the list of values to sort is stored.
        </td>
        <td align="center" valign="top">
          Yes, unless "value" is specified.
        </td>
      </tr>
      <tr>
        <td valign="top">delimiter</td>
        <td valign="top">
          The delimiter string that separates the values in the
          "list" attribute.
        </td>
        <td align="center" valign="top">No, defaults to ",".</td>
      </tr>
      <tr>
        <td valign="top">casesensitive</td>
        <td valign="top">
          If "true", does a case sensitive sorting of the strings. If
          "false" does case insensitive sorting.
        </td>
        <td align="center" valign="top">No. Defaults to "true".</td>
      </tr>
      <tr>
        <td valign="top">numeric</td>
        <td valign="top">
          If "true", does a numeric sorting, treating all list entries
          as if they were numbers.
        </td>
        <td align="center" valign="top">No. Defaults to "false".</td>
      </tr>
      <tr>
        <td valign="top">orderPropertyFile</td>
        <td valign="top">
          If specified, the list will sorted as if they were property
          names, and will be sorted in the order those properties
          appear in the given property file. Any properties in the
          "value" attribute which do not appear in the properties file
          will be inserted at the end of the list. This property is
          most useful when used in conjunction with the
          "propertyselector" task (see Example 2).
        </td>
        <td align="center" valign="top">No.</td>
      </tr>
      <tr>
        <td valign="top">orderPropertyFilePrefix</td>
        <td valign="top">
          If "orderPropertyFile" is specified, this value (with a
          trailing ".") will be prefixed to each property in the
          specified "orderPropertyFile" to determine sorting order.
        </td>
        <td align="center" valign="top">No.</td>
      </tr>
    </table>
    </subsection>
    <subsection name="Example 1">
      <source><![CDATA[<property name="my.list" value="z,y,x,w,v,u,t"/>
<sortlist property="my.sorted.list" value="${my.list}"
          delimiter=","/>
<echo message="${my.sorted.list}"/>]]></source>
      <p>
        prints
      </p>
      <source>[echo] t,u,v,w,x,y,z</source>
    </subsection>
    <subsection name="Example 2">
      <source><![CDATA[test.properties
---------------
a.name=a
c.name=c
b.name=b

<property file="test.properties" prefix="test"/>
<propertyselector property="my.list"
                  delimiter=","
                  match="test\..*\.name"
                  select="\0"/>
<sortlist property="my.sorted.list"
          value="${my.list}"
          delimiter=","
          orderPropertyFile="test.properties"
          orderPropertyFilePrefix="test"/>

<echo message="${my.sorted.list}"/>]]></source>
      <p>
        prints
      </p>
      <source>[echo] test.a.name,test.c.name,test.b.name</source>
      <p>
        Notice that the <code>test.properties</code> file did not have
        "test." prefixing all the properties. The
        "orderPropertyFilePrefix" was used to do that.
      </p>
    </subsection>
    </section>
  </body>
</document>
